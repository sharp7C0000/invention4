<% include header %>

<style>
body {
  font-family: sans-serif;
}
core-header-panel {
  background: white;
}
core-toolbar {
  background-color: #D1432F;
  color:#fff;
}
p {
  margin: 20px;
  padding: 80px 20px;
  border-radius: 20px;
  background-color: #eee;
}
</style>

<core-header-panel flex>
    <core-toolbar id="mainheader">
      <paper-icon-button id="navicon" 
        icon="arrow-back"></paper-icon-button>
      <span flex>Log-in</span>
      <paper-icon-button id="searchbutton" 
        icon="search"></paper-icon-button>
    </core-toolbar>
    <form>
      <paper-input label="username"></paper-input>
    </form>
    
  </core-header-panel>

   <grid-test></grid-test>

<polymer-element name="grid-test">
    <template>
      <polymer-grid-layout nodes="{{nodes}}" layout="{{layout}}"></polymer-grid-layout>

      <panel id="toolbar">toolbar</panel>
      <panel id="sidebar" v-flex>sidebar</panel>
      <panel id="workspace" flex>workspace</panel>
      <panel id="outputToolbar">otherbar</panel>
      <panel id="output" v-flex>
         
        output
        <h2>Documentation</h2>
        <h1>Verbiage</h1>
        <p>In backbone record integer LED amplified internet protocol a extension reflective. 
        Array kilohertz LED. Wavelength extension patch supporting wave an by prompt.</p>
      </panel>

      <style>
        * {
          -webkit-transition: top, right, bottom, left;
          -webkit-transition-duration: 0.3s;
        }
        panel {
          display: inline-block;
          border: 4px dotted lightblue;
          padding: 16px;
        }
        /*#outputToolbar {
          width: 400px;
        }
        #output {
          width: 400px;
        }
        #workspace {
          border-color: orange;
        }*/
      </style>
    </template>
    <script>
      Polymer('grid-test', {
        arrangements: [[
          [1, 1, 1],
          [2, 3, 4],
          [2, 3, 5]
        ], [
          [4, 3, 2],
          [5, 3, 2],
          [5, 1, 1]
        ], [
          [1, 1],
          [2, 3],
          [4, 3]
        ]],
        outputLayout: 0,
        ready: function() {
          //this.nodes = [
          //  this.$.toolbar, this.$.sidebar, this.$.workspace, 
          //  this.$.outputToolbar, this.$.output
          //];
          this.outputLayoutChanged();
          //setInterval(this.toggleLayout.bind(this), 2500);
        },
        outputLayoutChanged: function() {
          this.layout = this.arrangements[this.outputLayout];
        },
        toggleLayout: function() {
          this.outputLayout = (this.outputLayout + 1) % this.arrangements.length;
        }
      });
    </script>


  
<script src="components/requirejs/require.js" data-main="js/auth.js"></script>

<% include footer %>